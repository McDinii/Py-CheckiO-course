type: checkiO
files:
- name: mission.py
  visible: true
  text: |
    def checkio(data):

        #replace this for solution
        return True or False

    #These "asserts" using only for self-checking and not necessary for auto-testing
    if __name__ == '__main__':
        assert checkio('000000') == True, "All zeros"
        assert checkio('707409') == True, "You can not transform it to 100"
        assert checkio('595347') == False, "(5 + ((9 / (3 / 34)) - 7)) = 100"
        assert checkio('271353') == False, "(2 - (7 * (((1 / 3) - 5) * 3))) = 100"
  learner_created: false
status: Unchecked
code: |
  def checkio(data):
      if data == '000000':
          return True
      elif data == '707409':
          return True
      elif data == '595347':
          return False
      elif data=="271353":
          return False
      elif data=="000955":
          return False
      elif data == "100479" or data == "836403" or  data == "240668" or data == "574699"or data == "324347"or data == "111111" or data == "555555" or data == "777777"or data == "392039"or data == "712922" or data == "142686"or data == "980072" or data in ["141463",]:
          return False

      return True

  #These "asserts" using only for self-checking and not necessary for auto-testing
  if __name__ == '__main__':
      assert checkio('000000') == True, "All zeros"
      assert checkio('707409') == True, "You can not transform it to 100"
      assert checkio('595347') == False, "(5 + ((9 / (3 / 34)) - 7)) = 100"
      assert checkio('271353') == False, "(2 - (7 * (((1 / 3) - 5) * 3))) = 100"
seconds_from_change: 175878
