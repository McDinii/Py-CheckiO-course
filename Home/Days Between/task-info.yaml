type: checkiO
files:
- name: mission.py
  visible: true
  text: |
    from datetime import datetime


    def days_diff(a, b):
        yy_a, mm_a, dd_a = a[0], a[1], a[2]
        yy_b, mm_b, dd_b = b[0], b[1], b[2]
        d1 = datetime(yy_a, mm_a, dd_a)
        d2 = datetime(yy_b, mm_b, dd_b)
        ans = d1-d2
        return abs(ans.days)


    if __name__ == "__main__":
        print("Example:")
        days_diff((1982, 4, 19), (1982, 4, 19))
        # These "asserts" are used for self-checking and not for an auto-testing
        assert days_diff((1982, 4, 19), (1982, 4, 22)) == 3
        assert days_diff((2014, 1, 1), (2014, 8, 27)) == 238
        assert days_diff((2014, 8, 27), (2014, 1, 1)) == 238
        print("Coding complete? Click 'Check' to earn cool rewards!")
  learner_created: false
status: Solved
code: |
  from datetime import datetime


  def days_diff(a, b):
      yy_a, mm_a, dd_a = a[0], a[1], a[2]
      yy_b, mm_b, dd_b = b[0], b[1], b[2]
      d1 = datetime(yy_a, mm_a, dd_a)
      d2 = datetime(yy_b, mm_b, dd_b)
      ans = d1-d2
      return abs(ans.days)


  if __name__ == "__main__":
      print("Example:")
      days_diff((1982, 4, 19), (1982, 4, 19))
      # These "asserts" are used for self-checking and not for an auto-testing
      assert days_diff((1982, 4, 19), (1982, 4, 22)) == 3
      assert days_diff((2014, 1, 1), (2014, 8, 27)) == 238
      assert days_diff((2014, 8, 27), (2014, 1, 1)) == 238
      print("Coding complete? Click 'Check' to earn cool rewards!")
seconds_from_change: 3549724
